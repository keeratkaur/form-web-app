@model techNL_Forms_app.Models.Form

@{
    ViewData["Title"] = Model.Title;
}

@section Styles {
    <link rel="stylesheet" href="~/css/form-preview.css" />
}

<div class="preview-container">
    <div class="container py-5">
        <div class="row justify-content-center">
            <div class="col-lg-8">
                <div class="card shadow-lg border-0 rounded-3">
                    <div class="card-header bg-white border-0 py-4">
                        <div class="info-header">
                            <img src="~/images/technl logo - rgb - horizontal.webp" alt="techNL Logo" class="responsive-image" />
                            <hr class="divider" />
                            @if (!string.IsNullOrEmpty(Model.BannerImage))
                            {
                                <div class="banner-container">
                                    <img src="@Url.Content(Model.BannerImage)" alt="Form Banner" class="responsive-image mb-3" style="max-height: 300px; object-fit: cover;" />
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.BannerDescription))
                            {
                                <p class="banner-description text-muted mb-4">@Model.BannerDescription</p>
                            }
                            <div class="mb-2 text-center">
                                <h1 class="h3 mb-2">@Model.Title</h1>
                                @if (!string.IsNullOrEmpty(Model.Description))
                                {
                                    <p class="text-muted mb-0">@Model.Description</p>
                                }
                            </div>
                            <div class="d-flex gap-2">
                                <a href="@Url.Action("EditByLink", new { uniqueLink = Model.UniqueLink })" 
                                   class="btn btn-outline-primary d-flex align-items-center gap-2">
                                    <i class="bi bi-pencil"></i> Edit Form
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body p-4">
                        <form id="previewForm" class="needs-validation" novalidate>
                            @foreach (var field in Model.Fields.OrderBy(f => f.Order))
                            {
                                <div class="form-group mb-4">
                                    <label class="form-label d-flex align-items-center gap-2">
                                        <i class="bi bi-@GetFieldTypeIcon(field.FieldType) text-primary"></i>
                                        <span class="fw-semibold">@field.Label</span>
                                    </label>
                                    
                                    @switch (field.FieldType.ToLower())
                                    {
                                        case "text":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-type"></i>
                                                </span>
                                                <input type="text" class="form-control ps-3 border-start-0" 
                                                       name="@field.FieldName" 
                                                       placeholder="Enter @field.Label.ToLower()" />
                                            </div>
                                            break;

                                        case "textarea":
                                        case "paragraph":
                                            <textarea class="form-control" 
                                                      name="@field.FieldName" 
                                                      rows="4"
                                                      placeholder="Enter @field.Label.ToLower()"
                                                      style="resize: vertical;"></textarea>
                                            break;

                                        case "number":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-123"></i>
                                                </span>
                                                <input type="number" class="form-control ps-3 border-start-0" 
                                                       name="@field.FieldName" 
                                                       placeholder="Enter @field.Label.ToLower()" />
                                            </div>
                                            break;

                                        case "email":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-envelope"></i>
                                                </span>
                                                <input type="email" class="form-control ps-3 border-start-0" 
                                                       name="@field.FieldName" 
                                                       placeholder="Enter your email"
                                                       pattern="[a-zA-Z0-9._%+-]+@@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}"
                                                       oninput="validateEmail(this)" />
                                                <div class="invalid-feedback">
                                                    Please enter a valid email address (e.g., example@domain.com).
                                                </div>
                                            </div>
                                            break;

                                        case "date":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-calendar"></i>
                                                </span>
                                                <input type="date" class="form-control ps-3 border-start-0" 
                                                       name="@field.FieldName" />
                                            </div>
                                            break;

                                        case "time":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-clock"></i>
                                                </span>
                                                <input type="time" class="form-control ps-3 border-start-0" 
                                                       name="@field.FieldName" />
                                            </div>
                                            break;

                                        case "select":
                                        case "dropdown":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-list"></i>
                                                </span>
                                                <select class="form-select ps-3 border-start-0" name="@field.FieldName">
                                                    <option value="">Select @field.Label.ToLower()</option>
                                                    @foreach (var option in field.Options.OrderBy(o => o.Order))
                                                    {
                                                        <option value="@option.OptionValue">@option.OptionLabel</option>
                                                    }
                                                </select>
                                            </div>
                                            break;

                                        case "radio":
                                            <div class="d-flex flex-column gap-2">
                                                @foreach (var option in field.Options.OrderBy(o => o.Order))
                                                {
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="radio" 
                                                               name="@field.FieldName" 
                                                               value="@option.OptionValue" 
                                                               id="@field.FieldName@option.OptionId" />
                                                        <label class="form-check-label" for="@field.FieldName@option.OptionId">
                                                            @option.OptionLabel
                                                        </label>
                                                    </div>
                                                }
                                            </div>
                                            break;

                                        case "checkbox":
                                        case "checkboxes":
                                        case "multiplechoice":
                                            <div class="d-flex flex-column gap-2">
                                                @if (field.Options != null && field.Options.Any())
                                                {
                                                    foreach (var option in field.Options.OrderBy(o => o.Order))
                                                    {
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="checkbox" 
                                                                   name="@(field.FieldName)[]" 
                                                                   value="@option.OptionValue" 
                                                                   id="@(field.FieldName)_@(option.OptionId)" />
                                                            <label class="form-check-label" for="@(field.FieldName)_@(option.OptionId)">
                                                                @option.OptionLabel
                                                            </label>
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" 
                                                               name="@field.FieldName" 
                                                               value="true" 
                                                               id="@(field.FieldName)_single" />
                                                        <label class="form-check-label" for="@(field.FieldName)_single">
                                                            @field.Label
                                                        </label>
                                                    </div>
                                                }
                                            </div>
                                            break;

                                        case "tel":
                                        case "phone":
                                            <div class="input-group">
                                                <span class="input-group-text bg-light border-end-0">
                                                    <i class="bi bi-telephone"></i>
                                                </span>
                                                <input type="tel" class="form-control ps-3 border-start-0"
                                                       name="@field.FieldName"
                                                       placeholder="Enter your phone number"
                                                       pattern="[0-9]{10}"
                                                       maxlength="10"
                                                       oninput="validatePhone(this)" />
                                                <div class="invalid-feedback">
                                                    Please enter a valid 10-digit phone number.
                                                </div>
                                            </div>
                                            break;
                                    }

                                    @if (field.IsRequired)
                                    {
                                        <div class="invalid-feedback">
                                            This field is required.
                                        </div>
                                    }
                                </div>
                            }

                            <div class="d-flex justify-content-end gap-2 mt-4">
                                <button type="button" class="btn btn-outline-secondary" onclick="window.history.back()">
                                    <i class="bi bi-arrow-left"></i> Back
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send"></i> Submit
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}

@functions {
    private string GetFieldTypeIcon(string fieldType)
    {
        return fieldType?.ToLower() switch
        {
            "text" => "input-cursor-text",
            "textarea" => "text-paragraph",
            "number" => "123",
            "email" => "envelope",
            "password" => "key",
            "date" => "calendar",
            "time" => "clock",
            "datetime" => "calendar-date",
            "checkbox" => "check-square",
            "radio" => "record-circle",
            "select" or "dropdown" => "list",
            "file" => "file-earmark",
            "tel" or "phone" => "telephone",
            "url" => "link",
            _ => "cursor"
        };
    }
}