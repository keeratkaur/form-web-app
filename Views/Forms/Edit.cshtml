@model techNL_Forms_app.Models.Form

@{
    ViewData["Title"] = "Edit Form";
}

@Html.AntiForgeryToken()

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <!-- Form Details Card -->
            <div class="card shadow-lg border-0 rounded-3 mb-4">
                <div class="card-header bg-white border-0 py-3 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <div class="form-icon me-3">
                            <i class="bi bi-pencil-square fs-4 text-primary"></i>
                        </div>
                        <div>
                            <h3 class="mb-1 fs-4 fw-semibold">Edit Form</h3>
                            <p class="text-muted mb-0 small">Update your form details and manage fields</p>
                        </div>
                    </div>
                    <a asp-action="Index" class="btn btn-outline-primary btn-sm d-flex align-items-center gap-2">
                        <i class="bi bi-arrow-left"></i> Back to Forms
                    </a>
                </div>
                <div class="card-body p-4">
                    <form asp-action="EditByLink" asp-route-uniqueLink="@Model.UniqueLink" method="post" enctype="multipart/form-data" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="FormId" />
                        <input type="hidden" asp-for="CreatedAt" />
                        <input type="hidden" asp-for="UniqueLink" />
                        <div class="row g-4">
                            <div class="col-md-8">
                                <div class="mb-4">
                                    <label asp-for="Title" class="form-label fw-semibold fs-6 mb-2">
                                        <i class="bi bi-type-h1 me-2 text-primary"></i>Form Title
                                    </label>
                                    <input asp-for="Title" class="form-control form-control-lg rounded-3" 
                                           placeholder="Enter a descriptive title for your form" />
                                    <span asp-validation-for="Title" class="text-danger mt-1 small"></span>
                                </div>
                                <div class="mb-4">
                                    <label asp-for="Description" class="form-label fw-semibold fs-6 mb-2">
                                        <i class="bi bi-text-paragraph me-2 text-primary"></i>Description
                                    </label>
                                    <textarea asp-for="Description" class="form-control rounded-3" rows="4" 
                                              placeholder="Provide a detailed description of your form's purpose"></textarea>
                                    <span asp-validation-for="Description" class="text-danger mt-1 small"></span>
                                </div>
                                @if (!string.IsNullOrEmpty(Model.BannerImage))
                                {
                                    <div class="mb-2" id="currentBanner">
                                        <img src="@Model.BannerImage" alt="Current Banner" class="img-fluid" style="max-height: 200px;" />
                                        <button type="button" class="btn btn-danger btn-sm mt-2" id="deleteBannerBtn">Delete Picture</button>
                                    </div>
                                }
                                <div class="input-group">
                                    <span class="input-group-text bg-light border-end-0">
                                        <i class="bi bi-image"></i>
                                    </span>
                                    <input type="file" class="form-control ps-3 border-start-0"
                                           name="BannerImageFile" accept="image/*"
                                           onchange="handleFileSelect(this)" />
                                </div>
                                <div id="imagePreview" class="mt-2 d-none">
                                    <img src="#" alt="New Banner Preview" class="img-fluid" style="max-height: 200px;" />
                                </div>
                                <input type="hidden" name="BannerImage" value="@Model.BannerImage" id="bannerImageInput" />

                                <div class="mb-4">
                                    <label class="form-label d-flex align-items-center gap-2">
                                        <i class="bi bi-text-paragraph text-primary"></i>
                                        <span class="fw-semibold">Banner Description</span>
                                        <small class="text-muted">(Optional)</small>
                                    </label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light border-end-0">
                                            <i class="bi bi-text-paragraph"></i>
                                        </span>
                                        <input type="text" class="form-control ps-3 border-start-0"
                                               name="BannerDescription" value="@Model.BannerDescription"
                                               placeholder="Enter banner description" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="card bg-light border-0 rounded-3 shadow-sm">
                                    <div class="card-body p-4">
                                        <h5 class="card-title mb-4 fw-semibold">
                                            <i class="bi bi-gear me-2 text-primary"></i>Form Settings
                                        </h5>
                                        <div class="form-check form-switch mb-4">
                                            <input asp-for="IsPublished" class="form-check-input" role="switch" />
                                            <label asp-for="IsPublished" class="form-check-label">
                                                <span class="fw-semibold d-block mb-1">Published Status</span>
                                                <small class="text-muted">Make this form available to users</small>
                                            </label>
                                        </div>

                                        <div class="mb-4">
                                            <label class="form-label">
                                                <span class="fw-semibold d-block mb-1">
                                                    <i class="bi bi-calendar-event me-2 text-primary"></i>Start Date/Time
                                                </span>
                                                <small class="text-muted d-block mb-2">When the form becomes available</small>
                                            </label>
                                            <input asp-for="StartDate" type="datetime-local" class="form-control" />
                                        </div>

                                        <div class="mb-4">
                                            <label class="form-label">
                                                <span class="fw-semibold d-block mb-1">
                                                    <i class="bi bi-calendar-x me-2 text-primary"></i>End Date/Time
                                                </span>
                                                <small class="text-muted d-block mb-2">When the form stops accepting submissions</small>
                                            </label>
                                            <input asp-for="EndDate" type="datetime-local" class="form-control" />
                                        </div>

                                        <div class="mb-4">
                                            <label class="form-label">
                                                <span class="fw-semibold d-block mb-1">
                                                    <i class="bi bi-link-45deg me-2 text-primary"></i>Unique Link
                                                </span>
                                                <small class="text-muted d-block mb-2">Share this link to access your form</small>
                                            </label>
                                            <div class="input-group">
                                                <input asp-for="UniqueLink" class="form-control" readonly />
                                                <button type="button" class="btn btn-outline-primary" onclick="copyToClipboard('@Model.UniqueLink')">
                                                    <i class="bi bi-clipboard"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="d-flex justify-content-end mt-4">
                            <button type="submit" class="btn btn-primary btn-lg px-5 d-flex align-items-center gap-2">
                                <i class="bi bi-save"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Form Fields Card -->
            <div class="card shadow-lg border-0 rounded-3">
                <div class="card-header bg-white border-0 py-3">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <div class="form-icon me-3">
                                <i class="bi bi-list-check fs-4 text-primary"></i>
                            </div>
                            <div>
                                <h3 class="mb-1 fs-4 fw-semibold">Form Fields</h3>
                                <p class="text-muted mb-0 small">Manage the fields in your form</p>
                            </div>
                        </div>
                        <div class="d-flex align-items-center gap-2">
                            <a asp-action="PreviewByLink" asp-route-uniqueLink="@Model.UniqueLink" 
                               class="btn btn-secondary btn-sm d-flex align-items-center gap-2" target="_blank"
                               onclick="trackLinkClick('@Model.UniqueLink'); return true;">
                                <i class="bi bi-eye"></i> Preview Form
                            </a>
                            <a asp-action="AddField" asp-route-formId="@Model.FormId" 
                               class="btn btn-success btn-sm d-flex align-items-center gap-2">
                                <i class="bi bi-plus-circle"></i> Add Field
                            </a>
                        </div>
                    </div>
                </div>
                <div class="card-body p-4">
                    @if (!Model.Fields.Any())
                    {
                        <div class="text-center py-5">
                            <div class="mb-3">
                                <i class="bi bi-input-cursor-text display-1 text-muted"></i>
                            </div>
                            <h3 class="fs-4 text-muted mb-3">No Fields Yet</h3>
                            <p class="text-muted mb-4">Add fields to your form to start collecting data</p>
                            <a asp-action="AddField" asp-route-formId="@Model.FormId" 
                               class="btn btn-primary btn-lg px-4">
                                Add Your First Field
                            </a>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover align-middle mb-0" id="fieldsTable">
                                <thead>
                                    <tr>
                                        <th class="border-bottom py-3 ps-4" style="width: 50px;"></th>
                                        <th class="border-bottom py-3" style="width: 50px;">Order</th>
                                        <th class="border-bottom py-3">Field Type</th>
                                        <th class="border-bottom py-3">Label (Frontend)</th>
                                        <th class="border-bottom py-3">Field Name (Backend)</th>
                                        <th class="border-bottom py-3 text-center" style="width: 100px;">Required</th>
                                        <th class="border-bottom py-3 text-center" style="width: 250px;">Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="sortableFields">
                                    @foreach (var field in Model.Fields.OrderBy(f => f.Order))
                                    {
                                        <tr class="draggable-row" data-field-id="@field.FieldId" data-order="@field.Order">
                                            <td class="ps-4 drag-handle" style="cursor: move;">
                                                <i class="bi bi-grip-vertical text-muted"></i>
                                            </td>
                                            <td>
                                                <span class="badge rounded-pill bg-light text-dark order-number">
                                                    @field.Order
                                                </span>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <i class="bi bi-@GetFieldTypeIcon(field.FieldType) me-2 text-primary"></i>
                                                    <span>@field.FieldType</span>
                                                </div>
                                            </td>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    <span class="fw-semibold">@field.Label</span>
                                                </div>
                                            </td>
                                            <td>
                                                <code class="text-muted">@field.FieldName</code>
                                            </td>
                                            <td class="text-center">
                                                @if (field.IsRequired)
                                                {
                                                    <span class="badge rounded-pill bg-danger">Required</span>
                                                }
                                                else
                                                {
                                                    <span class="badge rounded-pill bg-secondary">Optional</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="d-flex justify-content-center gap-2">
                                                    <a asp-action="EditField" asp-route-id="@field.FieldId" 
                                                       class="btn btn-sm btn-outline-primary" title="Edit Field">
                                                        <i class="bi bi-pencil-square"></i>
                                                    </a>
                                                    <form asp-action="RemoveField" asp-route-id="@field.FieldId" 
                                                          method="post" class="d-inline"
                                                          onsubmit="return confirm('Are you sure you want to delete this field?');">
                                                        <button type="submit" class="btn btn-sm btn-outline-danger" 
                                                                title="Delete Field">
                                                            <i class="bi bi-trash"></i>
                                                        </button>
                                                    </form>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <script>
        // Form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        // Initialize drag and drop functionality
        document.addEventListener('DOMContentLoaded', function() {
            var sortable = new Sortable(document.getElementById('sortableFields'), {
                handle: '.drag-handle',
                animation: 150,
                onEnd: function(evt) {
                    updateFieldOrders();
                }
            });
        });

        // Update field orders after drag and drop
        function updateFieldOrders() {
            const rows = document.querySelectorAll('.draggable-row');
            const updates = [];
            
            rows.forEach((row, index) => {
                const fieldId = row.dataset.fieldId;
                const newOrder = index + 1;
                row.dataset.order = newOrder;
                row.querySelector('.order-number').textContent = newOrder;
                
                updates.push({
                    fieldId: fieldId,
                    order: newOrder
                });
            });

            // Send the updates to the server
            fetch('/Forms/UpdateFieldOrders', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify(updates)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Optional: Show success message
                    console.log('Field orders updated successfully');
                } else {
                    console.error('Failed to update field orders');
                }
            })
            .catch(error => {
                console.error('Error updating field orders:', error);
            });
        }

        // Copy to clipboard function
        function copyToClipboard(text) {
            const baseUrl = window.location.origin;
            const fullUrl = `${baseUrl}/Submissions/Submit?uniqueLink=${text}`;
            navigator.clipboard.writeText(fullUrl).then(function() {
                // Show a temporary tooltip or alert to indicate successful copy
                alert('Link copied to clipboard!');
            }).catch(function(err) {
                console.error('Failed to copy text: ', err);
                alert('Failed to copy link to clipboard');
            });
        }

        // Image preview function
        function handleFileSelect(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    var preview = document.getElementById('imagePreview');
                    preview.querySelector('img').src = e.target.result;
                    preview.classList.remove('d-none');
                };
                reader.readAsDataURL(input.files[0]);
            }
        }

        // Track link click function
        function trackLinkClick(uniqueLink) {
            // Optional: Add analytics tracking
            console.log('Preview link clicked:', uniqueLink);
        }

        document.addEventListener('DOMContentLoaded', function () {
            const deleteBtn = document.getElementById('deleteBannerBtn');
            if (deleteBtn) {
                deleteBtn.addEventListener('click', function () {
                    if (confirm('Are you sure you want to delete the picture?')) {
                        fetch('/Forms/DeleteBannerImage?uniqueLink=@Model.UniqueLink', {
                            method: 'POST',
                            headers: {
                                'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                document.getElementById('currentBanner').style.display = 'none';
                                document.getElementById('bannerImageInput').value = '';
                            } else {
                                alert('Failed to delete the picture.');
                            }
                        });
                    }
                });
            }
        });
    </script>
}

@functions {
    private string GetFieldTypeIcon(string fieldType)
    {
        return fieldType?.ToLower() switch
        {
            "text" => "input-cursor-text",
            "textarea" => "text-paragraph",
            "number" => "123",
            "email" => "envelope",
            "password" => "key",
            "date" => "calendar",
            "time" => "clock",
            "datetime" => "calendar-date",
            "checkbox" => "check-square",
            "radio" => "record-circle",
            "select" or "dropdown" => "list",
            "file" => "file-earmark",
            "tel" or "phone" => "telephone",
            "url" => "link",
            _ => "cursor"
        };
    }
}
